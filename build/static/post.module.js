(window["__LOADABLE_LOADED_CHUNKS__"] = window["__LOADABLE_LOADED_CHUNKS__"] || []).push([["post"],{

/***/ "./packages/twentytwenty-theme/src/components/post/post.js":
/*!*****************************************************************!*\
  !*** ./packages/twentytwenty-theme/src/components/post/post.js ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"./node_modules/core-js/modules/es.symbol.description.js\");\n/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _featured_media__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./featured-media */ \"./packages/twentytwenty-theme/src/components/post/featured-media.js\");\n/* harmony import */ var _post_item__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./post-item */ \"./packages/twentytwenty-theme/src/components/post/post-item.js\");\n/* harmony import */ var _post_categories__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./post-categories */ \"./packages/twentytwenty-theme/src/components/post/post-categories.js\");\n/* harmony import */ var _post_meta__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./post-meta */ \"./packages/twentytwenty-theme/src/components/post/post-meta.js\");\n/* harmony import */ var _post_tags__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./post-tags */ \"./packages/twentytwenty-theme/src/components/post/post-tags.js\");\n/* harmony import */ var _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @emotion/react/jsx-runtime */ \"./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}/**\n * The Post component that the TwentyTwenty theme uses for rendering any kind of\n * \"post type\" (posts, pages, attachments, etc.).\n *\n * It doesn't receive any prop but the Frontity store, which it receives from\n * {@link connect}. The current Frontity state is used to know which post type\n * should be rendered.\n *\n * @param props - The Frontity store (state, actions, and libraries).\n *\n * @example\n * ```js\n * <Switch>\n *   <Post when={data.isPostType} />\n * </Switch>\n * ```\n *\n * @returns The {@link Post} element rendered.\n */const Post=({state,actions,libraries})=>{// Get information about the current URL.\nconst data=state.source.get(state.router.link);// Get the data of the post.\nconst post=state.source[data.type][data.id];// Get the html2react component.\nconst Html2React=libraries.html2react.Component;// Get all categories\nconst allCategories=state.source.category;/**\n   * The item's categories is an array of each category id. So, we'll look up\n   * the details of each category in allCategories.\n   */const categories=post.categories&&post.categories.map(catId=>allCategories[catId]);// Get all tags\nconst allTags=state.source.tag;/**\n   * The item's categories is an array of each tag id. So, we'll look up the\n   * details of each tag in allTags.\n   */const tags=post.tags&&post.tags.map(tagId=>allTags[tagId]);/**\n   * Once the post has loaded in the DOM, prefetch both the\n   * home posts and the list component so if the user visits\n   * the home page, everything is ready and it loads instantly.\n   */Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useEffect\"])(()=>{actions.source.fetch(\"/\");},[actions.source]);// Load the post, but only if the data is ready.\nreturn data.isReady?Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsxs\"])(PostArticle,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(Header,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsxs\"])(_post_item__WEBPACK_IMPORTED_MODULE_4__[\"SectionContainer\"],{children:[post.categories&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(_post_categories__WEBPACK_IMPORTED_MODULE_5__[\"default\"],{categories:categories}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(_post_item__WEBPACK_IMPORTED_MODULE_4__[\"PostTitle\"],{as:\"h1\",className:\"heading-size-1\",dangerouslySetInnerHTML:{__html:post.title.rendered}}),post.caption&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(_post_item__WEBPACK_IMPORTED_MODULE_4__[\"PostCaption\"],{dangerouslySetInnerHTML:{__html:post.caption.rendered}}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(_post_meta__WEBPACK_IMPORTED_MODULE_6__[\"default\"],{item:post})]})}),state.theme.featuredMedia.showOnPost&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(FeaturedImage,{id:post.featured_media,isSinglePost:true}),post.description&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(_post_item__WEBPACK_IMPORTED_MODULE_4__[\"PostInner\"],{size:\"thin\",children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(_post_item__WEBPACK_IMPORTED_MODULE_4__[\"EntryContent\"],{dangerouslySetInnerHTML:{__html:post.description.rendered}})}),post.content&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsxs\"])(_post_item__WEBPACK_IMPORTED_MODULE_4__[\"PostInner\"],{size:\"thin\",children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(_post_item__WEBPACK_IMPORTED_MODULE_4__[\"EntryContent\"],{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(Html2React,{html:post.content.rendered})}),post.tags&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_8__[\"jsx\"])(_post_tags__WEBPACK_IMPORTED_MODULE_7__[\"default\"],{tags:tags})]})]}):null;};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"connect\"])(Post));const Header=/*#__PURE__*/Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"styled\"])(_post_item__WEBPACK_IMPORTED_MODULE_4__[\"PostHeader\"], false?undefined:{target:\"e62fgu22\",label:\"Header\"})( false?undefined:{name:\"1iex0al\",styles:\"background-color:#fff;margin:0;padding:4rem 0;@media (min-width: 700px){padding:8rem 0;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcQW5kcmVcXERlc2t0b3BcXHdlYnNpdGVzXFxteS13b3JkcHJlc3MtdGhlbWVcXHBhY2thZ2VzXFx0d2VudHl0d2VudHktdGhlbWVcXHNyY1xcY29tcG9uZW50c1xccG9zdFxccG9zdC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFnSWlDIiwiZmlsZSI6IkM6XFxVc2Vyc1xcQW5kcmVcXERlc2t0b3BcXHdlYnNpdGVzXFxteS13b3JkcHJlc3MtdGhlbWVcXHBhY2thZ2VzXFx0d2VudHl0d2VudHktdGhlbWVcXHNyY1xcY29tcG9uZW50c1xccG9zdFxccG9zdC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHN0eWxlZCwgY29ubmVjdCB9IGZyb20gXCJmcm9udGl0eVwiO1xuaW1wb3J0IHsgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgRmVhdHVyZWRNZWRpYSBmcm9tIFwiLi9mZWF0dXJlZC1tZWRpYVwiO1xuaW1wb3J0IHtcbiAgRW50cnlDb250ZW50LFxuICBQb3N0IGFzIF9Qb3N0LFxuICBQb3N0SGVhZGVyLFxuICBQb3N0SW5uZXIsXG4gIFBvc3RUaXRsZSxcbiAgUG9zdENhcHRpb24sXG4gIFNlY3Rpb25Db250YWluZXIsXG59IGZyb20gXCIuL3Bvc3QtaXRlbVwiO1xuaW1wb3J0IFBvc3RDYXRlZ29yaWVzIGZyb20gXCIuL3Bvc3QtY2F0ZWdvcmllc1wiO1xuaW1wb3J0IFBvc3RNZXRhIGZyb20gXCIuL3Bvc3QtbWV0YVwiO1xuaW1wb3J0IFBvc3RUYWdzIGZyb20gXCIuL3Bvc3QtdGFnc1wiO1xuXG4vKipcbiAqIFRoZSBQb3N0IGNvbXBvbmVudCB0aGF0IHRoZSBUd2VudHlUd2VudHkgdGhlbWUgdXNlcyBmb3IgcmVuZGVyaW5nIGFueSBraW5kIG9mXG4gKiBcInBvc3QgdHlwZVwiIChwb3N0cywgcGFnZXMsIGF0dGFjaG1lbnRzLCBldGMuKS5cbiAqXG4gKiBJdCBkb2Vzbid0IHJlY2VpdmUgYW55IHByb3AgYnV0IHRoZSBGcm9udGl0eSBzdG9yZSwgd2hpY2ggaXQgcmVjZWl2ZXMgZnJvbVxuICoge0BsaW5rIGNvbm5lY3R9LiBUaGUgY3VycmVudCBGcm9udGl0eSBzdGF0ZSBpcyB1c2VkIHRvIGtub3cgd2hpY2ggcG9zdCB0eXBlXG4gKiBzaG91bGQgYmUgcmVuZGVyZWQuXG4gKlxuICogQHBhcmFtIHByb3BzIC0gVGhlIEZyb250aXR5IHN0b3JlIChzdGF0ZSwgYWN0aW9ucywgYW5kIGxpYnJhcmllcykuXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYGpzXG4gKiA8U3dpdGNoPlxuICogICA8UG9zdCB3aGVuPXtkYXRhLmlzUG9zdFR5cGV9IC8+XG4gKiA8L1N3aXRjaD5cbiAqIGBgYFxuICpcbiAqIEByZXR1cm5zIFRoZSB7QGxpbmsgUG9zdH0gZWxlbWVudCByZW5kZXJlZC5cbiAqL1xuY29uc3QgUG9zdCA9ICh7IHN0YXRlLCBhY3Rpb25zLCBsaWJyYXJpZXMgfSkgPT4ge1xuICAvLyBHZXQgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGN1cnJlbnQgVVJMLlxuICBjb25zdCBkYXRhID0gc3RhdGUuc291cmNlLmdldChzdGF0ZS5yb3V0ZXIubGluayk7XG4gIC8vIEdldCB0aGUgZGF0YSBvZiB0aGUgcG9zdC5cbiAgY29uc3QgcG9zdCA9IHN0YXRlLnNvdXJjZVtkYXRhLnR5cGVdW2RhdGEuaWRdO1xuXG4gIC8vIEdldCB0aGUgaHRtbDJyZWFjdCBjb21wb25lbnQuXG4gIGNvbnN0IEh0bWwyUmVhY3QgPSBsaWJyYXJpZXMuaHRtbDJyZWFjdC5Db21wb25lbnQ7XG5cbiAgLy8gR2V0IGFsbCBjYXRlZ29yaWVzXG4gIGNvbnN0IGFsbENhdGVnb3JpZXMgPSBzdGF0ZS5zb3VyY2UuY2F0ZWdvcnk7XG5cbiAgLyoqXG4gICAqIFRoZSBpdGVtJ3MgY2F0ZWdvcmllcyBpcyBhbiBhcnJheSBvZiBlYWNoIGNhdGVnb3J5IGlkLiBTbywgd2UnbGwgbG9vayB1cFxuICAgKiB0aGUgZGV0YWlscyBvZiBlYWNoIGNhdGVnb3J5IGluIGFsbENhdGVnb3JpZXMuXG4gICAqL1xuICBjb25zdCBjYXRlZ29yaWVzID1cbiAgICBwb3N0LmNhdGVnb3JpZXMgJiYgcG9zdC5jYXRlZ29yaWVzLm1hcCgoY2F0SWQpID0+IGFsbENhdGVnb3JpZXNbY2F0SWRdKTtcblxuICAvLyBHZXQgYWxsIHRhZ3NcbiAgY29uc3QgYWxsVGFncyA9IHN0YXRlLnNvdXJjZS50YWc7XG5cbiAgLyoqXG4gICAqIFRoZSBpdGVtJ3MgY2F0ZWdvcmllcyBpcyBhbiBhcnJheSBvZiBlYWNoIHRhZyBpZC4gU28sIHdlJ2xsIGxvb2sgdXAgdGhlXG4gICAqIGRldGFpbHMgb2YgZWFjaCB0YWcgaW4gYWxsVGFncy5cbiAgICovXG4gIGNvbnN0IHRhZ3MgPSBwb3N0LnRhZ3MgJiYgcG9zdC50YWdzLm1hcCgodGFnSWQpID0+IGFsbFRhZ3NbdGFnSWRdKTtcblxuICAvKipcbiAgICogT25jZSB0aGUgcG9zdCBoYXMgbG9hZGVkIGluIHRoZSBET00sIHByZWZldGNoIGJvdGggdGhlXG4gICAqIGhvbWUgcG9zdHMgYW5kIHRoZSBsaXN0IGNvbXBvbmVudCBzbyBpZiB0aGUgdXNlciB2aXNpdHNcbiAgICogdGhlIGhvbWUgcGFnZSwgZXZlcnl0aGluZyBpcyByZWFkeSBhbmQgaXQgbG9hZHMgaW5zdGFudGx5LlxuICAgKi9cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBhY3Rpb25zLnNvdXJjZS5mZXRjaChcIi9cIik7XG4gIH0sIFthY3Rpb25zLnNvdXJjZV0pO1xuXG4gIC8vIExvYWQgdGhlIHBvc3QsIGJ1dCBvbmx5IGlmIHRoZSBkYXRhIGlzIHJlYWR5LlxuICByZXR1cm4gZGF0YS5pc1JlYWR5ID8gKFxuICAgIDxQb3N0QXJ0aWNsZT5cbiAgICAgIDxIZWFkZXI+XG4gICAgICAgIDxTZWN0aW9uQ29udGFpbmVyPlxuICAgICAgICAgIHsvKiBJZiB0aGUgcG9zdCBoYXMgY2F0ZWdvcmllcywgcmVuZGVyIHRoZSBjYXRlZ29yaWVzICovfVxuICAgICAgICAgIHtwb3N0LmNhdGVnb3JpZXMgJiYgPFBvc3RDYXRlZ29yaWVzIGNhdGVnb3JpZXM9e2NhdGVnb3JpZXN9IC8+fVxuICAgICAgICAgIDxQb3N0VGl0bGVcbiAgICAgICAgICAgIGFzPVwiaDFcIlxuICAgICAgICAgICAgY2xhc3NOYW1lPVwiaGVhZGluZy1zaXplLTFcIlxuICAgICAgICAgICAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3sgX19odG1sOiBwb3N0LnRpdGxlLnJlbmRlcmVkIH19XG4gICAgICAgICAgLz5cbiAgICAgICAgICB7LyogSWYgdGhlIHBvc3QgaGFzIGEgY2FwdGlvbiAobGlrZSBhdHRhY2htZW50cyksIHJlbmRlciBpdCAqL31cbiAgICAgICAgICB7cG9zdC5jYXB0aW9uICYmIChcbiAgICAgICAgICAgIDxQb3N0Q2FwdGlvblxuICAgICAgICAgICAgICBkYW5nZXJvdXNseVNldElubmVySFRNTD17eyBfX2h0bWw6IHBvc3QuY2FwdGlvbi5yZW5kZXJlZCB9fVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICApfVxuICAgICAgICAgIHsvKiBUaGUgcG9zdCdzIG1ldGFkYXRhIGxpa2UgYXV0aG9yLCBwdWJsaXNoIGRhdGUsIGFuZCBjb21tZW50cyAqL31cbiAgICAgICAgICA8UG9zdE1ldGEgaXRlbT17cG9zdH0gLz5cbiAgICAgICAgPC9TZWN0aW9uQ29udGFpbmVyPlxuICAgICAgPC9IZWFkZXI+XG5cbiAgICAgIHsvKlxuICAgICAgICogSWYgdGhlIHdhbnQgdG8gc2hvdyBmZWF0dXJlZCBtZWRpYSBpbiB0aGVcbiAgICAgICAqIGxpc3Qgb2YgZmVhdHVyZWQgcG9zdHMsIHdlIHJlbmRlciB0aGUgbWVkaWEuXG4gICAgICAgKi99XG4gICAgICB7c3RhdGUudGhlbWUuZmVhdHVyZWRNZWRpYS5zaG93T25Qb3N0ICYmIChcbiAgICAgICAgPEZlYXR1cmVkSW1hZ2UgaWQ9e3Bvc3QuZmVhdHVyZWRfbWVkaWF9IGlzU2luZ2xlUG9zdD17dHJ1ZX0gLz5cbiAgICAgICl9XG5cbiAgICAgIHsvKiBJZiB0aGUgcG9zdCBoYXMgYSBkZXNjcmlwdGlvbiAobGlrZSBhdHRhY2htZW50cyksIHdlIHJlbmRlciBpdCAqL31cbiAgICAgIHtwb3N0LmRlc2NyaXB0aW9uICYmIChcbiAgICAgICAgPFBvc3RJbm5lciBzaXplPVwidGhpblwiPlxuICAgICAgICAgIDxFbnRyeUNvbnRlbnRcbiAgICAgICAgICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt7IF9faHRtbDogcG9zdC5kZXNjcmlwdGlvbi5yZW5kZXJlZCB9fVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvUG9zdElubmVyPlxuICAgICAgKX1cblxuICAgICAgey8qIElmIHRoZSBwb3N0IGhhcyBjb250ZW50LCB3ZSByZW5kZXIgaXQgKi99XG4gICAgICB7cG9zdC5jb250ZW50ICYmIChcbiAgICAgICAgPFBvc3RJbm5lciBzaXplPVwidGhpblwiPlxuICAgICAgICAgIDxFbnRyeUNvbnRlbnQ+XG4gICAgICAgICAgICA8SHRtbDJSZWFjdCBodG1sPXtwb3N0LmNvbnRlbnQucmVuZGVyZWR9IC8+XG4gICAgICAgICAgPC9FbnRyeUNvbnRlbnQ+XG4gICAgICAgICAgey8qIElmIHRoZSBwb3N0IGhhcyB0YWdzLCByZW5kZXIgaXQgKi99XG4gICAgICAgICAge3Bvc3QudGFncyAmJiA8UG9zdFRhZ3MgdGFncz17dGFnc30gLz59XG4gICAgICAgIDwvUG9zdElubmVyPlxuICAgICAgKX1cbiAgICA8L1Bvc3RBcnRpY2xlPlxuICApIDogbnVsbDtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoUG9zdCk7XG5cbmNvbnN0IEhlYWRlciA9IHN0eWxlZChQb3N0SGVhZGVyKWBcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiA0cmVtIDA7XG4gIEBtZWRpYSAobWluLXdpZHRoOiA3MDBweCkge1xuICAgIHBhZGRpbmc6IDhyZW0gMDtcbiAgfVxuYDtcblxuY29uc3QgUG9zdEFydGljbGUgPSBzdHlsZWQoX1Bvc3QpYFxuICBwYWRkaW5nLXRvcDogMCAhaW1wb3J0YW50O1xuYDtcblxuY29uc3QgRmVhdHVyZWRJbWFnZSA9IHN0eWxlZChGZWF0dXJlZE1lZGlhKWBcbiAgbWFyZ2luLXRvcDogMCAhaW1wb3J0YW50O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgPiBkaXYge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuXG4gICY6YmVmb3JlIHtcbiAgICBiYWNrZ3JvdW5kOiAjZmZmO1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvdHRvbTogNTAlO1xuICAgIGxlZnQ6IDA7XG4gICAgcmlnaHQ6IDA7XG4gICAgdG9wOiAwO1xuICB9XG5gO1xuIl19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const PostArticle=/*#__PURE__*/Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"styled\"])(_post_item__WEBPACK_IMPORTED_MODULE_4__[\"Post\"], false?undefined:{target:\"e62fgu21\",label:\"PostArticle\"})( false?undefined:{name:\"1yloecn\",styles:\"padding-top:0!important\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcQW5kcmVcXERlc2t0b3BcXHdlYnNpdGVzXFxteS13b3JkcHJlc3MtdGhlbWVcXHBhY2thZ2VzXFx0d2VudHl0d2VudHktdGhlbWVcXHNyY1xcY29tcG9uZW50c1xccG9zdFxccG9zdC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF5SWlDIiwiZmlsZSI6IkM6XFxVc2Vyc1xcQW5kcmVcXERlc2t0b3BcXHdlYnNpdGVzXFxteS13b3JkcHJlc3MtdGhlbWVcXHBhY2thZ2VzXFx0d2VudHl0d2VudHktdGhlbWVcXHNyY1xcY29tcG9uZW50c1xccG9zdFxccG9zdC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHN0eWxlZCwgY29ubmVjdCB9IGZyb20gXCJmcm9udGl0eVwiO1xuaW1wb3J0IHsgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgRmVhdHVyZWRNZWRpYSBmcm9tIFwiLi9mZWF0dXJlZC1tZWRpYVwiO1xuaW1wb3J0IHtcbiAgRW50cnlDb250ZW50LFxuICBQb3N0IGFzIF9Qb3N0LFxuICBQb3N0SGVhZGVyLFxuICBQb3N0SW5uZXIsXG4gIFBvc3RUaXRsZSxcbiAgUG9zdENhcHRpb24sXG4gIFNlY3Rpb25Db250YWluZXIsXG59IGZyb20gXCIuL3Bvc3QtaXRlbVwiO1xuaW1wb3J0IFBvc3RDYXRlZ29yaWVzIGZyb20gXCIuL3Bvc3QtY2F0ZWdvcmllc1wiO1xuaW1wb3J0IFBvc3RNZXRhIGZyb20gXCIuL3Bvc3QtbWV0YVwiO1xuaW1wb3J0IFBvc3RUYWdzIGZyb20gXCIuL3Bvc3QtdGFnc1wiO1xuXG4vKipcbiAqIFRoZSBQb3N0IGNvbXBvbmVudCB0aGF0IHRoZSBUd2VudHlUd2VudHkgdGhlbWUgdXNlcyBmb3IgcmVuZGVyaW5nIGFueSBraW5kIG9mXG4gKiBcInBvc3QgdHlwZVwiIChwb3N0cywgcGFnZXMsIGF0dGFjaG1lbnRzLCBldGMuKS5cbiAqXG4gKiBJdCBkb2Vzbid0IHJlY2VpdmUgYW55IHByb3AgYnV0IHRoZSBGcm9udGl0eSBzdG9yZSwgd2hpY2ggaXQgcmVjZWl2ZXMgZnJvbVxuICoge0BsaW5rIGNvbm5lY3R9LiBUaGUgY3VycmVudCBGcm9udGl0eSBzdGF0ZSBpcyB1c2VkIHRvIGtub3cgd2hpY2ggcG9zdCB0eXBlXG4gKiBzaG91bGQgYmUgcmVuZGVyZWQuXG4gKlxuICogQHBhcmFtIHByb3BzIC0gVGhlIEZyb250aXR5IHN0b3JlIChzdGF0ZSwgYWN0aW9ucywgYW5kIGxpYnJhcmllcykuXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYGpzXG4gKiA8U3dpdGNoPlxuICogICA8UG9zdCB3aGVuPXtkYXRhLmlzUG9zdFR5cGV9IC8+XG4gKiA8L1N3aXRjaD5cbiAqIGBgYFxuICpcbiAqIEByZXR1cm5zIFRoZSB7QGxpbmsgUG9zdH0gZWxlbWVudCByZW5kZXJlZC5cbiAqL1xuY29uc3QgUG9zdCA9ICh7IHN0YXRlLCBhY3Rpb25zLCBsaWJyYXJpZXMgfSkgPT4ge1xuICAvLyBHZXQgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGN1cnJlbnQgVVJMLlxuICBjb25zdCBkYXRhID0gc3RhdGUuc291cmNlLmdldChzdGF0ZS5yb3V0ZXIubGluayk7XG4gIC8vIEdldCB0aGUgZGF0YSBvZiB0aGUgcG9zdC5cbiAgY29uc3QgcG9zdCA9IHN0YXRlLnNvdXJjZVtkYXRhLnR5cGVdW2RhdGEuaWRdO1xuXG4gIC8vIEdldCB0aGUgaHRtbDJyZWFjdCBjb21wb25lbnQuXG4gIGNvbnN0IEh0bWwyUmVhY3QgPSBsaWJyYXJpZXMuaHRtbDJyZWFjdC5Db21wb25lbnQ7XG5cbiAgLy8gR2V0IGFsbCBjYXRlZ29yaWVzXG4gIGNvbnN0IGFsbENhdGVnb3JpZXMgPSBzdGF0ZS5zb3VyY2UuY2F0ZWdvcnk7XG5cbiAgLyoqXG4gICAqIFRoZSBpdGVtJ3MgY2F0ZWdvcmllcyBpcyBhbiBhcnJheSBvZiBlYWNoIGNhdGVnb3J5IGlkLiBTbywgd2UnbGwgbG9vayB1cFxuICAgKiB0aGUgZGV0YWlscyBvZiBlYWNoIGNhdGVnb3J5IGluIGFsbENhdGVnb3JpZXMuXG4gICAqL1xuICBjb25zdCBjYXRlZ29yaWVzID1cbiAgICBwb3N0LmNhdGVnb3JpZXMgJiYgcG9zdC5jYXRlZ29yaWVzLm1hcCgoY2F0SWQpID0+IGFsbENhdGVnb3JpZXNbY2F0SWRdKTtcblxuICAvLyBHZXQgYWxsIHRhZ3NcbiAgY29uc3QgYWxsVGFncyA9IHN0YXRlLnNvdXJjZS50YWc7XG5cbiAgLyoqXG4gICAqIFRoZSBpdGVtJ3MgY2F0ZWdvcmllcyBpcyBhbiBhcnJheSBvZiBlYWNoIHRhZyBpZC4gU28sIHdlJ2xsIGxvb2sgdXAgdGhlXG4gICAqIGRldGFpbHMgb2YgZWFjaCB0YWcgaW4gYWxsVGFncy5cbiAgICovXG4gIGNvbnN0IHRhZ3MgPSBwb3N0LnRhZ3MgJiYgcG9zdC50YWdzLm1hcCgodGFnSWQpID0+IGFsbFRhZ3NbdGFnSWRdKTtcblxuICAvKipcbiAgICogT25jZSB0aGUgcG9zdCBoYXMgbG9hZGVkIGluIHRoZSBET00sIHByZWZldGNoIGJvdGggdGhlXG4gICAqIGhvbWUgcG9zdHMgYW5kIHRoZSBsaXN0IGNvbXBvbmVudCBzbyBpZiB0aGUgdXNlciB2aXNpdHNcbiAgICogdGhlIGhvbWUgcGFnZSwgZXZlcnl0aGluZyBpcyByZWFkeSBhbmQgaXQgbG9hZHMgaW5zdGFudGx5LlxuICAgKi9cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBhY3Rpb25zLnNvdXJjZS5mZXRjaChcIi9cIik7XG4gIH0sIFthY3Rpb25zLnNvdXJjZV0pO1xuXG4gIC8vIExvYWQgdGhlIHBvc3QsIGJ1dCBvbmx5IGlmIHRoZSBkYXRhIGlzIHJlYWR5LlxuICByZXR1cm4gZGF0YS5pc1JlYWR5ID8gKFxuICAgIDxQb3N0QXJ0aWNsZT5cbiAgICAgIDxIZWFkZXI+XG4gICAgICAgIDxTZWN0aW9uQ29udGFpbmVyPlxuICAgICAgICAgIHsvKiBJZiB0aGUgcG9zdCBoYXMgY2F0ZWdvcmllcywgcmVuZGVyIHRoZSBjYXRlZ29yaWVzICovfVxuICAgICAgICAgIHtwb3N0LmNhdGVnb3JpZXMgJiYgPFBvc3RDYXRlZ29yaWVzIGNhdGVnb3JpZXM9e2NhdGVnb3JpZXN9IC8+fVxuICAgICAgICAgIDxQb3N0VGl0bGVcbiAgICAgICAgICAgIGFzPVwiaDFcIlxuICAgICAgICAgICAgY2xhc3NOYW1lPVwiaGVhZGluZy1zaXplLTFcIlxuICAgICAgICAgICAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3sgX19odG1sOiBwb3N0LnRpdGxlLnJlbmRlcmVkIH19XG4gICAgICAgICAgLz5cbiAgICAgICAgICB7LyogSWYgdGhlIHBvc3QgaGFzIGEgY2FwdGlvbiAobGlrZSBhdHRhY2htZW50cyksIHJlbmRlciBpdCAqL31cbiAgICAgICAgICB7cG9zdC5jYXB0aW9uICYmIChcbiAgICAgICAgICAgIDxQb3N0Q2FwdGlvblxuICAgICAgICAgICAgICBkYW5nZXJvdXNseVNldElubmVySFRNTD17eyBfX2h0bWw6IHBvc3QuY2FwdGlvbi5yZW5kZXJlZCB9fVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICApfVxuICAgICAgICAgIHsvKiBUaGUgcG9zdCdzIG1ldGFkYXRhIGxpa2UgYXV0aG9yLCBwdWJsaXNoIGRhdGUsIGFuZCBjb21tZW50cyAqL31cbiAgICAgICAgICA8UG9zdE1ldGEgaXRlbT17cG9zdH0gLz5cbiAgICAgICAgPC9TZWN0aW9uQ29udGFpbmVyPlxuICAgICAgPC9IZWFkZXI+XG5cbiAgICAgIHsvKlxuICAgICAgICogSWYgdGhlIHdhbnQgdG8gc2hvdyBmZWF0dXJlZCBtZWRpYSBpbiB0aGVcbiAgICAgICAqIGxpc3Qgb2YgZmVhdHVyZWQgcG9zdHMsIHdlIHJlbmRlciB0aGUgbWVkaWEuXG4gICAgICAgKi99XG4gICAgICB7c3RhdGUudGhlbWUuZmVhdHVyZWRNZWRpYS5zaG93T25Qb3N0ICYmIChcbiAgICAgICAgPEZlYXR1cmVkSW1hZ2UgaWQ9e3Bvc3QuZmVhdHVyZWRfbWVkaWF9IGlzU2luZ2xlUG9zdD17dHJ1ZX0gLz5cbiAgICAgICl9XG5cbiAgICAgIHsvKiBJZiB0aGUgcG9zdCBoYXMgYSBkZXNjcmlwdGlvbiAobGlrZSBhdHRhY2htZW50cyksIHdlIHJlbmRlciBpdCAqL31cbiAgICAgIHtwb3N0LmRlc2NyaXB0aW9uICYmIChcbiAgICAgICAgPFBvc3RJbm5lciBzaXplPVwidGhpblwiPlxuICAgICAgICAgIDxFbnRyeUNvbnRlbnRcbiAgICAgICAgICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt7IF9faHRtbDogcG9zdC5kZXNjcmlwdGlvbi5yZW5kZXJlZCB9fVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvUG9zdElubmVyPlxuICAgICAgKX1cblxuICAgICAgey8qIElmIHRoZSBwb3N0IGhhcyBjb250ZW50LCB3ZSByZW5kZXIgaXQgKi99XG4gICAgICB7cG9zdC5jb250ZW50ICYmIChcbiAgICAgICAgPFBvc3RJbm5lciBzaXplPVwidGhpblwiPlxuICAgICAgICAgIDxFbnRyeUNvbnRlbnQ+XG4gICAgICAgICAgICA8SHRtbDJSZWFjdCBodG1sPXtwb3N0LmNvbnRlbnQucmVuZGVyZWR9IC8+XG4gICAgICAgICAgPC9FbnRyeUNvbnRlbnQ+XG4gICAgICAgICAgey8qIElmIHRoZSBwb3N0IGhhcyB0YWdzLCByZW5kZXIgaXQgKi99XG4gICAgICAgICAge3Bvc3QudGFncyAmJiA8UG9zdFRhZ3MgdGFncz17dGFnc30gLz59XG4gICAgICAgIDwvUG9zdElubmVyPlxuICAgICAgKX1cbiAgICA8L1Bvc3RBcnRpY2xlPlxuICApIDogbnVsbDtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoUG9zdCk7XG5cbmNvbnN0IEhlYWRlciA9IHN0eWxlZChQb3N0SGVhZGVyKWBcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiA0cmVtIDA7XG4gIEBtZWRpYSAobWluLXdpZHRoOiA3MDBweCkge1xuICAgIHBhZGRpbmc6IDhyZW0gMDtcbiAgfVxuYDtcblxuY29uc3QgUG9zdEFydGljbGUgPSBzdHlsZWQoX1Bvc3QpYFxuICBwYWRkaW5nLXRvcDogMCAhaW1wb3J0YW50O1xuYDtcblxuY29uc3QgRmVhdHVyZWRJbWFnZSA9IHN0eWxlZChGZWF0dXJlZE1lZGlhKWBcbiAgbWFyZ2luLXRvcDogMCAhaW1wb3J0YW50O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgPiBkaXYge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuXG4gICY6YmVmb3JlIHtcbiAgICBiYWNrZ3JvdW5kOiAjZmZmO1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvdHRvbTogNTAlO1xuICAgIGxlZnQ6IDA7XG4gICAgcmlnaHQ6IDA7XG4gICAgdG9wOiAwO1xuICB9XG5gO1xuIl19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const FeaturedImage=/*#__PURE__*/Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"styled\"])(_featured_media__WEBPACK_IMPORTED_MODULE_3__[\"default\"], false?undefined:{target:\"e62fgu20\",label:\"FeaturedImage\"})( false?undefined:{name:\"1w7ussq\",styles:\"margin-top:0!important;position:relative;>div{position:relative;}&:before{background:#fff;content:\\\"\\\";display:block;position:absolute;bottom:50%;left:0;right:0;top:0;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcQW5kcmVcXERlc2t0b3BcXHdlYnNpdGVzXFxteS13b3JkcHJlc3MtdGhlbWVcXHBhY2thZ2VzXFx0d2VudHl0d2VudHktdGhlbWVcXHNyY1xcY29tcG9uZW50c1xccG9zdFxccG9zdC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE2STJDIiwiZmlsZSI6IkM6XFxVc2Vyc1xcQW5kcmVcXERlc2t0b3BcXHdlYnNpdGVzXFxteS13b3JkcHJlc3MtdGhlbWVcXHBhY2thZ2VzXFx0d2VudHl0d2VudHktdGhlbWVcXHNyY1xcY29tcG9uZW50c1xccG9zdFxccG9zdC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHN0eWxlZCwgY29ubmVjdCB9IGZyb20gXCJmcm9udGl0eVwiO1xuaW1wb3J0IHsgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgRmVhdHVyZWRNZWRpYSBmcm9tIFwiLi9mZWF0dXJlZC1tZWRpYVwiO1xuaW1wb3J0IHtcbiAgRW50cnlDb250ZW50LFxuICBQb3N0IGFzIF9Qb3N0LFxuICBQb3N0SGVhZGVyLFxuICBQb3N0SW5uZXIsXG4gIFBvc3RUaXRsZSxcbiAgUG9zdENhcHRpb24sXG4gIFNlY3Rpb25Db250YWluZXIsXG59IGZyb20gXCIuL3Bvc3QtaXRlbVwiO1xuaW1wb3J0IFBvc3RDYXRlZ29yaWVzIGZyb20gXCIuL3Bvc3QtY2F0ZWdvcmllc1wiO1xuaW1wb3J0IFBvc3RNZXRhIGZyb20gXCIuL3Bvc3QtbWV0YVwiO1xuaW1wb3J0IFBvc3RUYWdzIGZyb20gXCIuL3Bvc3QtdGFnc1wiO1xuXG4vKipcbiAqIFRoZSBQb3N0IGNvbXBvbmVudCB0aGF0IHRoZSBUd2VudHlUd2VudHkgdGhlbWUgdXNlcyBmb3IgcmVuZGVyaW5nIGFueSBraW5kIG9mXG4gKiBcInBvc3QgdHlwZVwiIChwb3N0cywgcGFnZXMsIGF0dGFjaG1lbnRzLCBldGMuKS5cbiAqXG4gKiBJdCBkb2Vzbid0IHJlY2VpdmUgYW55IHByb3AgYnV0IHRoZSBGcm9udGl0eSBzdG9yZSwgd2hpY2ggaXQgcmVjZWl2ZXMgZnJvbVxuICoge0BsaW5rIGNvbm5lY3R9LiBUaGUgY3VycmVudCBGcm9udGl0eSBzdGF0ZSBpcyB1c2VkIHRvIGtub3cgd2hpY2ggcG9zdCB0eXBlXG4gKiBzaG91bGQgYmUgcmVuZGVyZWQuXG4gKlxuICogQHBhcmFtIHByb3BzIC0gVGhlIEZyb250aXR5IHN0b3JlIChzdGF0ZSwgYWN0aW9ucywgYW5kIGxpYnJhcmllcykuXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYGpzXG4gKiA8U3dpdGNoPlxuICogICA8UG9zdCB3aGVuPXtkYXRhLmlzUG9zdFR5cGV9IC8+XG4gKiA8L1N3aXRjaD5cbiAqIGBgYFxuICpcbiAqIEByZXR1cm5zIFRoZSB7QGxpbmsgUG9zdH0gZWxlbWVudCByZW5kZXJlZC5cbiAqL1xuY29uc3QgUG9zdCA9ICh7IHN0YXRlLCBhY3Rpb25zLCBsaWJyYXJpZXMgfSkgPT4ge1xuICAvLyBHZXQgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGN1cnJlbnQgVVJMLlxuICBjb25zdCBkYXRhID0gc3RhdGUuc291cmNlLmdldChzdGF0ZS5yb3V0ZXIubGluayk7XG4gIC8vIEdldCB0aGUgZGF0YSBvZiB0aGUgcG9zdC5cbiAgY29uc3QgcG9zdCA9IHN0YXRlLnNvdXJjZVtkYXRhLnR5cGVdW2RhdGEuaWRdO1xuXG4gIC8vIEdldCB0aGUgaHRtbDJyZWFjdCBjb21wb25lbnQuXG4gIGNvbnN0IEh0bWwyUmVhY3QgPSBsaWJyYXJpZXMuaHRtbDJyZWFjdC5Db21wb25lbnQ7XG5cbiAgLy8gR2V0IGFsbCBjYXRlZ29yaWVzXG4gIGNvbnN0IGFsbENhdGVnb3JpZXMgPSBzdGF0ZS5zb3VyY2UuY2F0ZWdvcnk7XG5cbiAgLyoqXG4gICAqIFRoZSBpdGVtJ3MgY2F0ZWdvcmllcyBpcyBhbiBhcnJheSBvZiBlYWNoIGNhdGVnb3J5IGlkLiBTbywgd2UnbGwgbG9vayB1cFxuICAgKiB0aGUgZGV0YWlscyBvZiBlYWNoIGNhdGVnb3J5IGluIGFsbENhdGVnb3JpZXMuXG4gICAqL1xuICBjb25zdCBjYXRlZ29yaWVzID1cbiAgICBwb3N0LmNhdGVnb3JpZXMgJiYgcG9zdC5jYXRlZ29yaWVzLm1hcCgoY2F0SWQpID0+IGFsbENhdGVnb3JpZXNbY2F0SWRdKTtcblxuICAvLyBHZXQgYWxsIHRhZ3NcbiAgY29uc3QgYWxsVGFncyA9IHN0YXRlLnNvdXJjZS50YWc7XG5cbiAgLyoqXG4gICAqIFRoZSBpdGVtJ3MgY2F0ZWdvcmllcyBpcyBhbiBhcnJheSBvZiBlYWNoIHRhZyBpZC4gU28sIHdlJ2xsIGxvb2sgdXAgdGhlXG4gICAqIGRldGFpbHMgb2YgZWFjaCB0YWcgaW4gYWxsVGFncy5cbiAgICovXG4gIGNvbnN0IHRhZ3MgPSBwb3N0LnRhZ3MgJiYgcG9zdC50YWdzLm1hcCgodGFnSWQpID0+IGFsbFRhZ3NbdGFnSWRdKTtcblxuICAvKipcbiAgICogT25jZSB0aGUgcG9zdCBoYXMgbG9hZGVkIGluIHRoZSBET00sIHByZWZldGNoIGJvdGggdGhlXG4gICAqIGhvbWUgcG9zdHMgYW5kIHRoZSBsaXN0IGNvbXBvbmVudCBzbyBpZiB0aGUgdXNlciB2aXNpdHNcbiAgICogdGhlIGhvbWUgcGFnZSwgZXZlcnl0aGluZyBpcyByZWFkeSBhbmQgaXQgbG9hZHMgaW5zdGFudGx5LlxuICAgKi9cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBhY3Rpb25zLnNvdXJjZS5mZXRjaChcIi9cIik7XG4gIH0sIFthY3Rpb25zLnNvdXJjZV0pO1xuXG4gIC8vIExvYWQgdGhlIHBvc3QsIGJ1dCBvbmx5IGlmIHRoZSBkYXRhIGlzIHJlYWR5LlxuICByZXR1cm4gZGF0YS5pc1JlYWR5ID8gKFxuICAgIDxQb3N0QXJ0aWNsZT5cbiAgICAgIDxIZWFkZXI+XG4gICAgICAgIDxTZWN0aW9uQ29udGFpbmVyPlxuICAgICAgICAgIHsvKiBJZiB0aGUgcG9zdCBoYXMgY2F0ZWdvcmllcywgcmVuZGVyIHRoZSBjYXRlZ29yaWVzICovfVxuICAgICAgICAgIHtwb3N0LmNhdGVnb3JpZXMgJiYgPFBvc3RDYXRlZ29yaWVzIGNhdGVnb3JpZXM9e2NhdGVnb3JpZXN9IC8+fVxuICAgICAgICAgIDxQb3N0VGl0bGVcbiAgICAgICAgICAgIGFzPVwiaDFcIlxuICAgICAgICAgICAgY2xhc3NOYW1lPVwiaGVhZGluZy1zaXplLTFcIlxuICAgICAgICAgICAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3sgX19odG1sOiBwb3N0LnRpdGxlLnJlbmRlcmVkIH19XG4gICAgICAgICAgLz5cbiAgICAgICAgICB7LyogSWYgdGhlIHBvc3QgaGFzIGEgY2FwdGlvbiAobGlrZSBhdHRhY2htZW50cyksIHJlbmRlciBpdCAqL31cbiAgICAgICAgICB7cG9zdC5jYXB0aW9uICYmIChcbiAgICAgICAgICAgIDxQb3N0Q2FwdGlvblxuICAgICAgICAgICAgICBkYW5nZXJvdXNseVNldElubmVySFRNTD17eyBfX2h0bWw6IHBvc3QuY2FwdGlvbi5yZW5kZXJlZCB9fVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICApfVxuICAgICAgICAgIHsvKiBUaGUgcG9zdCdzIG1ldGFkYXRhIGxpa2UgYXV0aG9yLCBwdWJsaXNoIGRhdGUsIGFuZCBjb21tZW50cyAqL31cbiAgICAgICAgICA8UG9zdE1ldGEgaXRlbT17cG9zdH0gLz5cbiAgICAgICAgPC9TZWN0aW9uQ29udGFpbmVyPlxuICAgICAgPC9IZWFkZXI+XG5cbiAgICAgIHsvKlxuICAgICAgICogSWYgdGhlIHdhbnQgdG8gc2hvdyBmZWF0dXJlZCBtZWRpYSBpbiB0aGVcbiAgICAgICAqIGxpc3Qgb2YgZmVhdHVyZWQgcG9zdHMsIHdlIHJlbmRlciB0aGUgbWVkaWEuXG4gICAgICAgKi99XG4gICAgICB7c3RhdGUudGhlbWUuZmVhdHVyZWRNZWRpYS5zaG93T25Qb3N0ICYmIChcbiAgICAgICAgPEZlYXR1cmVkSW1hZ2UgaWQ9e3Bvc3QuZmVhdHVyZWRfbWVkaWF9IGlzU2luZ2xlUG9zdD17dHJ1ZX0gLz5cbiAgICAgICl9XG5cbiAgICAgIHsvKiBJZiB0aGUgcG9zdCBoYXMgYSBkZXNjcmlwdGlvbiAobGlrZSBhdHRhY2htZW50cyksIHdlIHJlbmRlciBpdCAqL31cbiAgICAgIHtwb3N0LmRlc2NyaXB0aW9uICYmIChcbiAgICAgICAgPFBvc3RJbm5lciBzaXplPVwidGhpblwiPlxuICAgICAgICAgIDxFbnRyeUNvbnRlbnRcbiAgICAgICAgICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt7IF9faHRtbDogcG9zdC5kZXNjcmlwdGlvbi5yZW5kZXJlZCB9fVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvUG9zdElubmVyPlxuICAgICAgKX1cblxuICAgICAgey8qIElmIHRoZSBwb3N0IGhhcyBjb250ZW50LCB3ZSByZW5kZXIgaXQgKi99XG4gICAgICB7cG9zdC5jb250ZW50ICYmIChcbiAgICAgICAgPFBvc3RJbm5lciBzaXplPVwidGhpblwiPlxuICAgICAgICAgIDxFbnRyeUNvbnRlbnQ+XG4gICAgICAgICAgICA8SHRtbDJSZWFjdCBodG1sPXtwb3N0LmNvbnRlbnQucmVuZGVyZWR9IC8+XG4gICAgICAgICAgPC9FbnRyeUNvbnRlbnQ+XG4gICAgICAgICAgey8qIElmIHRoZSBwb3N0IGhhcyB0YWdzLCByZW5kZXIgaXQgKi99XG4gICAgICAgICAge3Bvc3QudGFncyAmJiA8UG9zdFRhZ3MgdGFncz17dGFnc30gLz59XG4gICAgICAgIDwvUG9zdElubmVyPlxuICAgICAgKX1cbiAgICA8L1Bvc3RBcnRpY2xlPlxuICApIDogbnVsbDtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoUG9zdCk7XG5cbmNvbnN0IEhlYWRlciA9IHN0eWxlZChQb3N0SGVhZGVyKWBcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiA0cmVtIDA7XG4gIEBtZWRpYSAobWluLXdpZHRoOiA3MDBweCkge1xuICAgIHBhZGRpbmc6IDhyZW0gMDtcbiAgfVxuYDtcblxuY29uc3QgUG9zdEFydGljbGUgPSBzdHlsZWQoX1Bvc3QpYFxuICBwYWRkaW5nLXRvcDogMCAhaW1wb3J0YW50O1xuYDtcblxuY29uc3QgRmVhdHVyZWRJbWFnZSA9IHN0eWxlZChGZWF0dXJlZE1lZGlhKWBcbiAgbWFyZ2luLXRvcDogMCAhaW1wb3J0YW50O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgPiBkaXYge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuXG4gICY6YmVmb3JlIHtcbiAgICBiYWNrZ3JvdW5kOiAjZmZmO1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvdHRvbTogNTAlO1xuICAgIGxlZnQ6IDA7XG4gICAgcmlnaHQ6IDA7XG4gICAgdG9wOiAwO1xuICB9XG5gO1xuIl19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/twentytwenty-theme/src/components/post/post.js\n");

/***/ })

}]);